// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Phoenix = require("phoenix");
var Caml_option = require("bs-platform/lib/js/caml_option.js");

var Abstract = /* module */[];

var Push = /* module */[];

function join(timeout, channel) {
  return channel.join(timeout !== undefined ? Caml_option.valFromOption(timeout) : undefined);
}

function leave(timeout, channel) {
  return channel.leave(timeout !== undefined ? Caml_option.valFromOption(timeout) : undefined);
}

function push($$event, payload, timeout, channel) {
  return channel.push($$event, payload, timeout !== undefined ? Caml_option.valFromOption(timeout) : undefined);
}

var Channel = /* module */[
  /* join */join,
  /* leave */leave,
  /* push */push
];

function init(opts, endPoint) {
  return new Phoenix.Socket(endPoint, opts !== undefined ? Caml_option.valFromOption(opts) : undefined);
}

function connect(params, socket) {
  socket.connect(params !== undefined ? Caml_option.valFromOption(params) : undefined);
  return socket;
}

function disconnect(callback, code, reason, socket) {
  socket.disconnect(callback !== undefined ? Caml_option.valFromOption(callback) : undefined, code !== undefined ? Caml_option.valFromOption(code) : undefined, reason !== undefined ? Caml_option.valFromOption(reason) : undefined);
  return socket;
}

function channel(params, topic, socket) {
  return socket.channel(topic, params !== undefined ? Caml_option.valFromOption(params) : undefined);
}

var Socket = /* module */[
  /* init */init,
  /* connect */connect,
  /* disconnect */disconnect,
  /* channel */channel
];

function init$1(opts, channel) {
  return new Phoenix.Presence(channel, opts !== undefined ? Caml_option.valFromOption(opts) : undefined);
}

var Presence = /* module */[/* init */init$1];

exports.Abstract = Abstract;
exports.Push = Push;
exports.Channel = Channel;
exports.Socket = Socket;
exports.Presence = Presence;
/* phoenix Not a pure module */
